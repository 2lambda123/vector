============================================
Group
============================================
(1)
---

(program
  (exprs
    (expr (container (group (expr (literal (integer))))))
  )
)


============================================
Block
============================================
{1}
{1;false}

{
   1
   false
}

{
   {1;true}
   false
}
---

(program
  (exprs
    (expr (container (block (exprs (expr (literal (integer)))))))
    (expr (container (block (exprs
      (expr (literal (integer)))
      (expr (literal (boolean)))
    ))))
    (expr (container (block (exprs
      (expr (literal (integer)))
      (expr (literal (boolean)))
    ))))
    (expr (container (block (exprs
      (expr (container (block (exprs
        (expr (literal (integer)))
        (expr (literal (boolean)))
      ))))
      (expr (literal (boolean)))
    ))))
  )
)

============================================
Array
============================================
[]

[
 ]

 [1]

[ 1 ]

[
1
]

[1,2,3]
[ 1 , 2 , 3 ]

[
1
,
2
,
3
]

[1, {true}, "three"]

---

(program
  (exprs
    (expr (container (array)))
    (expr (container (array)))
    (expr (container (array (expr (literal (integer))))))
    (expr (container (array (expr (literal (integer))))))
    (expr (container (array (expr (literal (integer))))))
    (expr (container (array (expr (literal (integer))) (expr (literal (integer))) (expr (literal (integer))))))
    (expr (container (array (expr (literal (integer))) (expr (literal (integer))) (expr (literal (integer))))))
    (expr (container (array (expr (literal (integer))) (expr (literal (integer))) (expr (literal (integer))))))
    (expr (container (array
      (expr (literal (integer)))
      (expr (container (block (exprs (expr (literal (boolean)))))))
      (expr (literal (string)))
    )))
  )
)


